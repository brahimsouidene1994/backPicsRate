ingress:
  enabled: true
  annotations:  
    ingress.kubernetes.io/ssl-redirect: "true"
    kubernetes.io/ingress.class: traefik
    traefik.ingress.kubernetes.io/rule-type: PathPrefix
    cert-manager.io/cluster-issuer: letsencrypt-prod
  path: /
  hostname: auth.qa.picsrate.bbs-studio.tn
  servicePort: http
  tls:
  - hosts:
    - auth.qa.picsrate.bbs-studio.tn
    secretName: auth.qa.picsrate.bbs-studio.tn-tls

extraVolumes:
- name: realm-conf
  configMap:
    name: cm-picsrate-realm
- name: themes-conf
  persistentVolumeClaim:
    claimName: pvc-keycloak-themes
- name: providers-conf
  persistentVolumeClaim:
    claimName: pvc-keycloak-providers

extraVolumeMounts:
- mountPath: "/opt/keycloak/data/import"
  name: realm-conf
- mountPath: "/opt/bitnami/keycloak/themes"
  name: themes-conf
- mountPath: "/opt/bitnami/keycloak/providers"
  name: providers-conf

image:
  registry: docker.io
  repository: bitnami/keycloak
  tag: 21.1.1-debian-11-r17
  pullPolicy: IfNotPresent

resources:
  limits:
    cpu: 500m
    memory: 1024Mi
  requests:
    cpu: 250m
    memory: 512Mi

extraEnvVars:
  - name: KEYCLOAK_LOG_LEVEL
    value: INFO
  - name: KEYCLOAK_ADMIN
    value: "admin"
  - name: KEYCLOAK_ADMIN_PASSWORD
    value: "adminkeyclaok"
  - name: PROXY_ADDRESS_FORWARDING
    value: "true"
  - name: KC_PROXY
    value: "passthrough"
  - name: KEYCLOAK_EXTRA_ARGS
    value: "-Dkeycloak.import=/opt/keycloak/data/import"
  - name: WEBHOOK_HTTP_BASE_PATH
    value: "http://picsrate-service/keycloak-events"
  - name: WEBHOOK_HTTP_AUTH_USERNAME
    value: "auth_user"
  - name: WEBHOOK_HTTP_AUTH_PASSWORD
    value: "auth_password"
  - name: WEBHOOK_HTTP_INCLUDE_TOKEN
    value: "true"
  # - name: KC_HOSTNAME 
  #   value: "https://auth.qa.picsrate.bbs-studio.tn"
  # - name: KC_HOSTNAME_URL
  #   value: "https://auth.qa.picsrate.bbs-studio.tn"
  # - name: KC_HOSTNAME_ADMIN
  #   value: "https://auth.qa.picsrate.bbs-studio.tn"
  # - name: KC_HOSTNAME_STRICT
  #   value: "true"
  # - name: KC_METRICS_ENABLED
  #   value: "true"
  # - name: KC_LOG_CONSOLE_COLOR
  #   value: "true"
  # - name: KC_HEALTH_ENABLED
  #   value: "true"

postgresql:
  enabled: true
  primary:
    persistence:
      enabled: true
      existingClaim: pvc-db-keycloak
  auth:
    enablePostgresUser: true
    postgresPassword: "letmein"
    username: "keycloak"
    password: "letmein"
    database: "keycloak"
  volumePermissions:
    enabled: true
    
externalDatabase:
  host: keycloak-postgresql-0
  port: 5432
  user: "keycloak"
  password: "letmein"
  database: "keycloak"

production: true
tls:
  enabled: true
  autoGenerated: true

volumePermissions:
  enabled: true

metrics:
  enabled: true

readinessProbe:
  enabled: true
  initialDelaySeconds: 180  # Delay before checking readiness after pod starts
  periodSeconds: 10        # How often to check
  timeoutSeconds: 5        # Timeout for each check
  successThreshold: 1      # Success threshold
  failureThreshold: 5 